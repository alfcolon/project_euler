require 'prime'
# Highly divisible triangular number
# Problem 12
# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28

#
# We can see that 28 is the first triangle number to have over five divisors.
# What is the value of the first triangle number to have over five hundred divisors?


# until the product of a trigular number's prime divisors' powers plus one equals 500, move onto the next triangular number.
  def tri_Number(num)
    (num * (num + 1))/ 2
  end

  def divisors(num)
    return num.prime_division.map {|prime_set| prime_set[1] + 1}.reduce(:*)
  end

  num = 2
    until divisors(tri_Number(num)) >= 500
      num += 1
    end
  answer = tri_Number(num)
  puts answer
